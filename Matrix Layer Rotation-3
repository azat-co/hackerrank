function processData(input) {
    //Enter your code here
  let lines = input.split('\n')
  let m = lines[0].split(' ')[0]
  let n = lines[0].split(' ')[1]
  let r = parseInt(lines[0].split(' ')[2], 10)
  //console.log(m, n, r)
  lines.splice(0,1)
  let matrix = lines.map((line)=>{return line.split(' ')})
  //console.log(matrix)
     let snakes = []
  if (m<=n) {
    maxSnakes = Math.floor(m/2)
  } else if (m>n) {
    maxSnakes = Math.floor(n/2)
  }
      for (let mi=0; mi<maxSnakes; mi++) {
        let snake = []
        // snake = snake.concat(matrix[mi])
        for (let ni=mi; ni<n-mi; ni++) {
          snake.push(matrix[mi][ni])
        }
        for (let mj=mi+1; mj<m-1; mj++) {
          snake.push(matrix[mj][n-mi-1])
        }
        for (let ni=n-mi; ni>mi*2; ni--) {
          snake.push(matrix[m-mi-1][ni-mi-1])
        }
     //   snake = snake.concat(matrix[m-mi-1].reverse())
        for (let mj=m-mi-2; mj>mi; mj--) {
          snake.push(matrix[mj][mi])
        }      
        snakes.push(snake)
      }

 //   console.log(snakes)

    snakes = snakes.map((snake, index, list)=>{
      if (r>snake.length) {
        rSnake = r % snake.length
      } else {
        rSnake = r
      }
      for (let ri = 0; ri<r; ri++) {  
        let first = snake.shift()
        snake.push(first)
      }
     // console.log(first, snake)
      return snake
    })
//    console.log(snakes)

    for (let mi=0; mi<maxSnakes; mi++) {
      let snake = snakes.shift()
      // snake = snake.concat(matrix[mi])
      for (let ni=mi; ni<n-mi; ni++) {
        matrix[mi][ni] = snake.shift()
      }
      for (let mj=mi+1; mj<m-1; mj++) {
        matrix[mj][n-mi-1] = snake.shift()
      }
      for (let ni=n-mi; ni>mi*2; ni--) {
       matrix[m-mi-1][ni-mi-1] = snake.shift()
      }
   //   snake = snake.concat(matrix[m-mi-1].reverse())
      for (let mj=m-mi-2; mj>mi; mj--) {
        matrix[mj][mi] = snake.shift()
      }          
    } 
  //console.log(matrix)
  matrix.forEach((line)=>console.log(line.join(' ')))
} 

process.stdin.resume();
process.stdin.setEncoding("ascii");
_input = "";
process.stdin.on("data", function (input) {
    _input += input;
});

process.stdin.on("end", function () {
   processData(_input);
});
